{"version":3,"sources":["webpack:///./src/config/env.js","webpack:///./src/components/adminComponent/headTop.vue?9366","webpack:///./node_modules/sortablejs/modular/sortable.esm.js","webpack:///./src/components/adminComponent/headTop.vue?614c","webpack:///src/components/adminComponent/headTop.vue","webpack:///./src/components/adminComponent/headTop.vue?2808","webpack:///./src/components/adminComponent/headTop.vue?593a"],"names":["__webpack_require__","d","__webpack_exports__","baseUrl","imgBaseUrl","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_headTop_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_headTop_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","n","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","hasOwnProperty","call","apply","this","_objectSpread","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","version","userAgent","pattern","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","captureMode","capture","passive","on","el","event","fn","addEventListener","off","removeEventListener","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","document","nodeType","parentNode","closest","ctx","includeCTX","_throttleTimeout","R_SPACE","toggleClass","name","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","window","DOMMatrix","WebKitCSSMatrix","CSSMatrix","find","tagName","list","getElementsByTagName","getWindowScrollingElement","documentElement","scrollingElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","a","scaleY","isScrolledPast","rect","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","visible","getChild","childNum","options","currentChild","children","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","index","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","indexOfObject","arr","Number","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","extend","dst","src","isRectEqual","rect1","rect2","Math","round","throttle","callback","ms","args","_this","setTimeout","cancelThrottle","clearTimeout","scrollBy","x","y","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","AnimationStateManager","animationCallbackId","animationStates","captureAnimationState","animation","slice","push","fromRect","thisAnimationDuration","childMatrix","f","e","addAnimationState","removeAnimationState","splice","animateAll","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","calculateRealTime","animate","max","animationResetTimer","bind","prev","duration","currentRect","translateX","translateY","animatingX","animatingY","repaint","easing","animated","offsetWidth","sqrt","pow","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","pluginEvent","eventName","sortable","evt","eventCanceled","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventOptions","eventOptions","modifiedValue","optionListeners","dispatchEvent","_ref","rootEl","targetEl","cloneEl","toEl","fromEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","originalEvent","putSortable","onName","charAt","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","to","from","item","pullMode","lastPutMode","undefined","allEventOptions","data","dragEl","parentEl","ghostEl","nextEl","lastDownEl","cloneHidden","dragStarted","moved","activeSortable","active","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","Error","activeGroup","tapEvt","touchEvt","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","clear","_dragElInRowColumn","dragRect","targetRect","vertical","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_detectNearestEmptySortable","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","clientX","clientY","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","_globalDragOver","dropEffect","_onMove","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_ghostIsLast","spacer","_getSwapDirection","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_generateId","str","href","sum","charCodeAt","_saveInputCheckedState","root","inputs","idx","_el","checked","_nextTick","_cancelNextTick","id","contains","_getDirection","type","touch","originalTarget","shadowRoot","path","composedPath","button","isContentEditable","some","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","pointerType","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","inserted","ghostMatrix","relativeScrollOffset","dx","dy","translate3d","appendChild","_hideClone","cloneId","insertBefore","_loopId","setInterval","effectAllowed","_dragStartId","revert","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","changed","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","side1","scrolledPastTop","scrollBefore","dragIndex","nextElementSibling","after","moveVector","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","removeChild","save","handleEvent","toArray","order","getAttribute","items","set","destroy","Array","querySelectorAll","removeAttribute","_animate","utils","is","nextTick","cancelNextTick","detectDirection","_len","_key","create","scrollEl","scrollRootEl","lastAutoScrollX","lastAutoScrollY","touchEvt$1","pointerElemChangedInterval","autoScrolls","scrolling","AutoScrollPlugin","AutoScroll","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","_handleAutoScroll","_handleFallbackAutoScroll","dragOverCompleted","_ref2","dragOverBubble","drop","clearPointerElemChangedInterval","clearAutoScrolls","nulling","autoScroll","ogElemScroller","newElem","pid","isFallback","scrollCustomFn","sens","speed","scrollThisInstance","scrollFn","layersOut","currentParent","canScrollX","canScrollY","scrollPosX","scrollPosY","vx","vy","layer","scrollOffsetY","scrollOffsetX","toSortable","onSpill","Revert","Remove","startIndex","dragStart","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","separator","_v","_l","$route","_s","menu-align","command","handleCommand","userInfo","avatar","slot","staticRenderFns","headTopvue_type_script_lang_js_","env","created","computed","objectSpread","vuex_esm","methods","$router","$confirm","confirmButtonText","cancelButtonText","then","$message","message","localStorage","RESET_STATE","catch","error","adminComponent_headTopvue_type_script_lang_js_","component","componentNormalizer"],"mappings":"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","file":"js/extraList~foodList.0e8cfd6f.js","sourcesContent":["//  配置编译环境和线上环境之间的切换\n\n//  baseUrl: 域名地址\n//  routerMode: 路由模式\n//  imgBaseUrl: 图片所在域名地址\n\nlet baseUrl = '//localhost:4000'\nlet routerMode = 'hash'\nlet imgBaseUrl = ''\n\nif (process.env.NODE_ENV === 'development') {\n  imgBaseUrl = 'http://localhost:4000/img/'\n} else if (process.env.NODE_ENV === 'production') {\n  baseUrl = '//pos.migaox.com'\n  imgBaseUrl = 'http://pos.migaox.com/img/'\n}\n// if (process.env.NODE_ENV === 'development') {\n//   imgBaseUrl = 'http://localhost:4000/img/'\n// } else if (process.env.NODE_ENV === 'production') {\n//   baseUrl = '//elm.cangdu.org'\n//   imgBaseUrl = '//elm.cangdu.org/img/'\n// }\n\nexport { baseUrl, routerMode, imgBaseUrl }\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./headTop.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./headTop.vue?vue&type=style&index=0&lang=scss&\"","/**!\n * Sortable 1.10.0-rc2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar version = \"1.10.0-rc2\";\n\nfunction userAgent(pattern) {\n  return !!navigator.userAgent.match(pattern);\n}\n\nvar IE11OrLess =\n/*@__PURE__*/\nuserAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i);\nvar Edge =\n/*@__PURE__*/\nuserAgent(/Edge/i);\nvar FireFox =\n/*@__PURE__*/\nuserAgent(/firefox/i);\nvar Safari =\n/*@__PURE__*/\nuserAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS =\n/*@__PURE__*/\nuserAgent(/iP(ad|od|hone)/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  do {\n    var transform = css(el, 'transform');\n\n    if (transform && transform !== 'none') {\n      appliedTransforms = transform + ' ' + appliedTransforms;\n    }\n    /* jshint boss:true */\n\n  } while (!selfOnly && (el = el.parentNode));\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  if (IE11OrLess) {\n    return document.documentElement;\n  } else {\n    return document.scrollingElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {[DOMRect]}    rect         Optional rect of `el` to use\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, rect, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = (rect ? rect : getRect(el))[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    for (var key in obj) {\n      if (obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n\n      for (var i in children) {\n        if (css(children[i], 'display') === 'none' || children[i] === Sortable.ghost) continue;\n        animationStates.push({\n          target: children[i],\n          rect: getRect(children[i])\n        });\n        var fromRect = getRect(children[i]); // If animating: compensate for current animation\n\n        if (children[i].thisAnimationDuration) {\n          var childMatrix = matrix(children[i], true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        children[i].fromRect = fromRect;\n      }\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n\n      for (var i in animationStates) {\n        var time = 0,\n            target = animationStates[i].target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = animationStates[i].rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect; // If element is scrolled out of view: Do not animate\n\n        if ((isScrolledPast(target, toRect, 'bottom', 'top') || isScrolledPast(target, toRect, 'top', 'bottom') || isScrolledPast(target, toRect, 'right', 'left') || isScrolledPast(target, toRect, 'left', 'right')) && (isScrolledPast(target, animatingRect, 'bottom', 'top') || isScrolledPast(target, animatingRect, 'top', 'bottom') || isScrolledPast(target, animatingRect, 'right', 'left') || isScrolledPast(target, animatingRect, 'left', 'right')) && (isScrolledPast(target, fromRect, 'bottom', 'top') || isScrolledPast(target, fromRect, 'top', 'bottom') || isScrolledPast(target, fromRect, 'right', 'left') || isScrolledPast(target, fromRect, 'left', 'right'))) continue;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = this.options.animation;\n          }\n\n          this.animate(target, animatingRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            this.animationStates[this.i].target.animationTime = 0;\n            this.animationStates[this.i].target.prevFromRect = null;\n            this.animationStates[this.i].target.fromRect = null;\n            this.animationStates[this.i].target.prevToRect = null;\n            this.animationStates[this.i].target.thisAnimationDuration = null;\n          }.bind({\n            animationStates: animationStates,\n            i: Number(i)\n          }), time);\n          target.thisAnimationDuration = time;\n        }\n      }\n\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, prev, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var currentRect = getRect(target),\n            elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (prev.left - currentRect.left) / (scaleX || 1),\n            translateY = (prev.top - currentRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      !(option in plugin) && (plugin[option] = defaults[option]);\n    }\n\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    this.eventCanceled = false;\n    var eventNameGlobal = eventName + 'Global';\n\n    for (var i in plugins) {\n      if (!sortable[plugins[i].pluginName]) continue; // Fire global events if it exists in this sortable\n\n      if (sortable[plugins[i].pluginName][eventNameGlobal]) {\n        this.eventCanceled = !!sortable[plugins[i].pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugins[i].pluginName] && sortable[plugins[i].pluginName][eventName]) {\n        this.eventCanceled = this.eventCanceled || !!sortable[plugins[i].pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    }\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults) {\n    for (var i in plugins) {\n      var pluginName = plugins[i].pluginName;\n      if (!sortable.options[pluginName] && !plugins[i].initializeByDefault) continue;\n      var initialized = new plugins[i](sortable, el);\n      initialized.sortable = sortable;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.options);\n    }\n\n    for (var option in sortable.options) {\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventOptions: function getEventOptions(name, sortable) {\n    var eventOptions = {};\n\n    for (var i in plugins) {\n      if (typeof plugins[i].eventOptions !== 'function') continue;\n\n      _extends(eventOptions, plugins[i].eventOptions.call(sortable, name));\n    }\n\n    return eventOptions;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n\n    for (var i in plugins) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugins[i].pluginName]) continue; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugins[i].optionListeners && typeof plugins[i].optionListeners[name] === 'function') {\n        modifiedValue = plugins[i].optionListeners[name].call(sortable[plugins[i].pluginName], value);\n      }\n    }\n\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      eventOptions = _ref.eventOptions;\n  sortable = sortable || rootEl[expando];\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventOptions = _objectSpread({}, eventOptions, PluginManager.getEventOptions(name, sortable));\n\n  for (var option in allEventOptions) {\n    evt[option] = allEventOptions[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, [\"evt\"]);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nif (typeof window === \"undefined\" || !window.document) {\n  throw new Error(\"Sortable.js requires a window with a document\");\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  // false when <= IE11\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  for (var i in sortables) {\n    if (lastChild(sortables[i])) continue;\n    var rect = getRect(sortables[i]),\n        threshold = sortables[i][expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (threshold && insideHorizontally && insideVertically) {\n      return sortables[i];\n    }\n  }\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\ndocument.addEventListener('click', function (evt) {\n  if (ignoreNextClick) {\n    evt.preventDefault();\n    evt.stopPropagation && evt.stopPropagation();\n    evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n    ignoreNextClick = false;\n    return false;\n  }\n}, true);\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        event[i] = evt[i];\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: Number.parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0],\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1),\n          translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)'; // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      touchEvt = touch;\n      css(ghostEl, 'webkitTransform', translate3d);\n      css(ghostEl, 'mozTransform', translate3d);\n      css(ghostEl, 'msTransform', translate3d);\n      css(ghostEl, 'transform', translate3d);\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl);\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, null, 'top', 'top') || isScrolledPast(dragEl, null, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    }); // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this._animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var targetRect = getRect(target),\n      mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var _el = inputs[idx];\n    _el.checked && savedInputChecked.push(_el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\non(document, 'touchmove', function (evt) {\n  if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n    evt.preventDefault();\n  }\n}); // Export utils\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n\n  for (var i in plugins) {\n    var plugin = plugins[i];\n\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(el));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  }\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.options = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.sortable.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.sortable.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = evt.clientX,\n          y = evt.clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.sortable.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - evt.clientX) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - evt.clientX) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - evt.clientY) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - evt.clientY) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var target = document.elementFromPoint(originalEvent.clientX, originalEvent.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill(dragEl);\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(dragEl) {\n    this.sortable.captureAnimationState();\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.sortable.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(dragEl) {\n    this.sortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    this.sortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.options = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.sortable.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      return completed(true);\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.sortable.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventOptions: function eventOptions() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.options = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          for (var i in multiDragElements) {\n            data += (!i ? '' : ', ') + multiDragElements[i].textContent;\n          }\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable;\n      if (!this.isMultiDrag) return;\n\n      for (var i in multiDragElements) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], sortable.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], sortable.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      return true;\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent;\n      if (!this.isMultiDrag) return;\n\n      if (!sortable.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          return true;\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n\n      for (var i in multiDragClones) {\n        css(multiDragClones[i], 'display', '');\n      }\n\n      cloneNowShown();\n      clonesHidden = false;\n      return true;\n    },\n    hideClone: function hideClone(_ref5) {\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden;\n      if (!this.isMultiDrag) return;\n\n      for (var i in multiDragClones) {\n        css(multiDragClones[i], 'display', 'none');\n\n        if (sortable.options.removeCloneOnHide && multiDragClones[i].parentNode) {\n          multiDragClones[i].parentNode.removeChild(multiDragClones[i]);\n        }\n      }\n\n      cloneNowHidden();\n      clonesHidden = true;\n      return true;\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      for (var i in multiDragElements) {\n        multiDragElements[i].sortableIndex = index(multiDragElements[i]);\n      } // Sort multi-drag elements\n\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (sortable.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (sortable.options.animation) {\n          for (var i in multiDragElements) {\n            if (multiDragElements[i] === dragEl$1) continue;\n            css(multiDragElements[i], 'position', 'absolute');\n          }\n\n          var dragRect = getRect(dragEl$1, false, true, true);\n\n          for (var _i in multiDragElements) {\n            if (multiDragElements[_i] === dragEl$1) continue;\n            setRect(multiDragElements[_i], dragRect);\n          }\n\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (sortable.options.animation) {\n          for (var _i2 in multiDragElements) {\n            unsetRect(multiDragElements[_i2]);\n          }\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (sortable.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        return completed(false);\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        for (var i in multiDragElements) {\n          sortable.addAnimationState({\n            target: multiDragElements[i],\n            rect: folding ? getRect(multiDragElements[i]) : dragRect\n          });\n          unsetRect(multiDragElements[i]);\n          multiDragElements[i].fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElements[i]);\n        }\n\n        folding = false;\n        insertMultiDragElements(!sortable.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = sortable.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n\n          for (var i in multiDragElements) {\n            if (multiDragElements[i] === dragEl$1) continue;\n            setRect(multiDragElements[i], dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElements[i]);\n          }\n\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              for (var _i3 in multiDragClones) {\n                activeSortable.addAnimationState({\n                  target: multiDragClones[_i3],\n                  rect: clonesFromRect\n                });\n                multiDragClones[_i3].fromRect = clonesFromRect;\n                multiDragClones[_i3].thisAnimationDuration = null;\n              }\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n\n      for (var i in multiDragElements) {\n        multiDragElements[i].thisAnimationDuration = null;\n      }\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = sortable.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if ((!options.multiDragKey || this.multiDragKeyDown) && evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n\n              for (var _i4 in multiDragElements) {\n                multiDragElements[_i4].thisAnimationDuration = null;\n\n                if (multiDragElements[_i4] !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElements[_i4]) : dragRect;\n                  multiDragElements[_i4].fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElements[_i4],\n                    rect: rect\n                  });\n                }\n              }\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n\n            for (var _i5 in multiDragElements) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElements[_i5], children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElements[_i5]);\n              }\n\n              multiDragIndex++;\n            } // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n\n              for (var _i6 in multiDragElements) {\n                if (multiDragElements[_i6].sortableIndex !== index(multiDragElements[_i6])) {\n                  update = true;\n                  break;\n                }\n              }\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          for (var _i7 in multiDragElements) {\n            unsetRect(multiDragElements[_i7]);\n          }\n\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        for (var _i8 in multiDragClones) {\n          multiDragClones[_i8].parentNode && multiDragClones[_i8].parentNode.removeChild(multiDragClones[_i8]);\n        }\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroy: function destroy() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.sortable.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.sortable.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.sortable.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.sortable.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventOptions: function eventOptions() {\n      var _this = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (element) {\n        oldIndicies.push({\n          element: element,\n          index: element.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && element !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(element, ':not(.' + _this.options.selectedClass + ')');\n        } else {\n          newIndex = index(element);\n        }\n\n        newIndicies.push({\n          element: element,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  for (var i in multiDragElements) {\n    var target = rootEl.children[multiDragElements[i].sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElements[i], target);\n    } else {\n      rootEl.appendChild(multiDragElements[i]);\n    }\n  }\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  for (var i in multiDragClones) {\n    var target = rootEl.children[multiDragClones[i].sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragClones[i], target);\n    } else {\n      rootEl.appendChild(multiDragClones[i]);\n    }\n  }\n}\n\nfunction removeMultiDragElements() {\n  for (var i in multiDragElements) {\n    if (multiDragElements[i] === dragEl$1) continue;\n    multiDragElements[i].parentNode && multiDragElements[i].parentNode.removeChild(multiDragElements[i]);\n  }\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\nexport default Sortable;\nexport { MultiDragPlugin as MultiDrag, Sortable, SwapPlugin as Swap };\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"header_container\"},[_c('el-breadcrumb',{attrs:{\"separator\":\"/\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/manage/home' }}},[_vm._v(\"首页\")]),_vm._l((_vm.$route.meta),function(item,index){return _c('el-breadcrumb-item',{key:index},[_vm._v(_vm._s(item))])})],2),_c('el-dropdown',{attrs:{\"menu-align\":\"start\"},on:{\"command\":_vm.handleCommand}},[_c('img',{staticClass:\"avator\",attrs:{\"src\":_vm.imgBaseUrl + _vm.userInfo.avatar}}),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":\"home\"}},[_vm._v(\"首页\")]),_c('el-dropdown-item',{attrs:{\"command\":\"signout\"}},[_vm._v(\"退出\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"header_container\">\n\n    <el-breadcrumb separator=\"/\">\n      <el-breadcrumb-item :to=\"{ path: '/manage/home' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item\n        v-for=\"(item, index) in $route.meta\"\n        :key=\"index\"\n      >{{item}}</el-breadcrumb-item>\n    </el-breadcrumb>\n    <el-dropdown\n      @command=\"handleCommand\"\n      menu-align='start'\n    >\n      <img\n        :src=\"imgBaseUrl + userInfo.avatar\"\n        class=\"avator\"\n      >\n      <el-dropdown-menu slot=\"dropdown\">\n        <el-dropdown-item command=\"home\">首页</el-dropdown-item>\n        <el-dropdown-item command=\"signout\">退出</el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n  </div>\n</template>\n\n<script>\nimport { imgBaseUrl } from '@/config/env'\nimport { mapState, mapMutations } from 'vuex'\nexport default {\n  data() {\n    return {\n      imgBaseUrl\n    }\n  },\n  created() {},\n  computed: {\n    ...mapState(['userInfo'])\n  },\n  methods: {\n    ...mapMutations(['RESET_STATE']),\n    handleCommand(command) {\n      if (command == 'home') {\n        this.$router.push('/home')\n      } else if (command == 'signout') {\n        this.$confirm('是否退出?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        })\n          .then(() => {\n            this.$message({\n              type: 'success',\n              message: '退出成功'\n            })\n            window.localStorage.clear()\n            this.RESET_STATE()\n            this.$router.push('/')\n          })\n          .catch(error => {})\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import '../../style/mixin';\n.header_container {\n  background-color: #eff2f7;\n  height: 60px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 20px;\n}\n.avator {\n  @include wh(36px, 36px);\n  border-radius: 50%;\n  margin-right: 37px;\n}\n.el-dropdown-menu__item {\n  text-align: center;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./headTop.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./headTop.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./headTop.vue?vue&type=template&id=53606e5a&\"\nimport script from \"./headTop.vue?vue&type=script&lang=js&\"\nexport * from \"./headTop.vue?vue&type=script&lang=js&\"\nimport style0 from \"./headTop.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}